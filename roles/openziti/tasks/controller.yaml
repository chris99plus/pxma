---

- name: Ensure controller installed
  ansible.builtin.apt:
    name: openziti-controller

- name: Get controller service
  ansible.builtin.service:
    name: ziti-controller
    state: stopped
  register: ziti_ctrl_service_result

- name: Create pki directory
  ansible.builtin.file:
    path: "{{ openziti_pki_root }}"
    state: directory
    mode: ug=rwx,o-rwx

- name: Create pki ca
  ansible.builtin.command:
    cmd: |
      {{ openziti_bin }}/ziti pki create ca
        --pki-root={{ openziti_pki_root }}
        --ca-file={{ openziti_ca_file }}
        --ca-name='{{ openziti_network }} Root CA'
        --pki-country={{ openziti_pki_country }}
        --pki-organization={{ openziti_pki_organisation }}
        --pki-organizational-unit={{ openziti_pki_organisational_unit }}
    creates: "{{ openziti_pki_root }}/{{ openziti_ca_file }}/keys/{{ openziti_ca_file }}.key"

- name: Create pki intermediate
  ansible.builtin.command:
    cmd: |
      {{ openziti_bin }}/ziti pki create intermediate
        --pki-root={{ openziti_pki_root }}
        --ca-name={{ openziti_ca_file }}
        --intermediate-file={{ openziti_intermediate_file }}
        --intermediate-name='{{ openziti_network }} Intermediate CA'
        --pki-country={{ openziti_pki_country }}
        --pki-organization={{ openziti_pki_organisation }}
        --pki-organizational-unit={{ openziti_pki_organisational_unit }}
    creates: "{{ openziti_pki_root }}/{{ openziti_intermediate_file }}/keys/{{ openziti_intermediate_file }}.key"

- name: Create server and client keys
  ansible.builtin.command:
    cmd: |
      {{ openziti_bin }}/ziti pki create key
        --pki-root={{ openziti_pki_root }}
        --ca-name={{ openziti_intermediate_file }}
        --key-file={{ openziti_server_file }}
    creates: "{{ openziti_pki_root }}/{{ openziti_intermediate_file }}/keys/{{ openziti_server_file }}.key"

- name: Create server certs 
  ansible.builtin.command:
    cmd: |
      {{ openziti_bin }}/ziti pki create server
        --pki-root={{ openziti_pki_root }}
        --ca-name={{ openziti_intermediate_file }}
        --key-file={{ openziti_server_file }}
        --server-file={{ openziti_server_file }}
        --dns='localhost,{{ openziti_ctrl_advertised_address }}'
        --ip='127.0.0.1,::1'
        --allow-overwrite
    creates: "{{ openziti_pki_root }}/{{ openziti_intermediate_file }}/certs/{{ openziti_server_file }}.chain.pem"

- name: Create client certs
  ansible.builtin.command:
    cmd: |
      {{ openziti_bin }}/ziti pki create client
        --pki-root={{ openziti_pki_root }}
        --ca-name={{ openziti_intermediate_file }}
        --key-file={{ openziti_server_file }}
        --client-file={{ openziti_client_file }}
        --allow-overwrite
    creates: "{{ openziti_pki_root }}/{{ openziti_intermediate_file }}/certs/{{ openziti_client_file }}.cert"

- name: Create db directory
  ansible.builtin.file:
    path: "{{ openziti_home }}/db"
    state: directory
    mode: ug=rwx,o-rwx

- name: Generate controller config
  ansible.builtin.template:
    src: controller.conf.j2
    dest: "{{ openziti_home }}/ctrl.conf.yaml"
    mode: ug=rw,o-rw

- name: Generate controller override service config
  ansible.builtin.template:
    src: override.conf.j2
    dest: "/etc/systemd/system/ziti-controller.service.d/override.conf"
    mode: u=rw,go=r
    owner: "root"
    group: "root"

- name: Initialze controller
  ansible.builtin.command:
    cmd: |
      {{ openziti_bin }}/ziti controller edge init {{ openziti_home }}/ctrl.conf.yaml
        -u '{{ openziti_admin_username }}'
        -n '{{ openziti_admin_name }}'
        -p '{{ openziti_admin_password }}'
    creates: "{{ openziti_home }}/db/ctrl.db"

- name: Ensure openziti home is accessable from service
  ansible.builtin.file:
    path: "{{ openziti_home }}"
    state: directory
    mode: u=rwx,go-rwx
    owner: 65534
    group: 65534
    recurse: true

# FIXME: Is this a mistake on my side or by OpenZiti
- name: Copy entrypoint
  ansible.builtin.template:
    src: entrypoint.bash.j2
    dest: "{{ openziti_opt }}/etc/controller/entrypoint.bash"
    mode: u=rwx,go=rx
    owner: root
    group: root

- name: Start controller service
  ansible.builtin.systemd_service:
    name: ziti-controller
    state: started
    daemon-reload: true
    enabled: true
