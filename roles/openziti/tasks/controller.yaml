---

- name: Ensure controller installed
  ansible.builtin.apt:
    name: openziti-controller

- name: Get controller service
  ansible.builtin.service:
    name: ziti-controller
    state: stopped
  register: ziti_ctrl_service_result

- name: Create pki directory
  ansible.builtin.file:
    path: "{{ openziti_pki_root }}"
    state: directory
    owner: "{{ openziti_user }}"
    group: "{{ openziti_group }}"
    mode: ug=rwx,o-rwx

- name: Ensure pki exist
  become_user: "{{ openziti_user }}"
  become: true
  block:

    - name: Create pki ca
      become_user: "{{ openziti_user }}" # noqa: partial-become
      become: true
      ansible.builtin.command:
        cmd: |
          {{ openziti_bin }}/ziti pki create ca
            --pki-root={{ openziti_pki_root }}
            --ca-file={{ openziti_ca_file }}
            --ca-name='{{ openziti_network }} Root CA'
            --pki-country={{ openziti_pki_country }}
            --pki-organization={{ openziti_pki_organisation }}
            --pki-organizational-unit={{ openziti_pki_organisational_unit }}
        creates: "{{ openziti_pki_root }}/{{ openziti_ca_file }}/keys/{{ openziti_ca_file }}.key"

    - name: Create pki intermediate
      become_user: "{{ openziti_user }}"
      become: true
      ansible.builtin.command:
        cmd: |
          {{ openziti_bin }}/ziti pki create intermediate
            --pki-root={{ openziti_pki_root }}
            --ca-name={{ openziti_ca_file }}
            --intermediate-file={{ openziti_intermediate_file }}
            --intermediate-name='{{ openziti_network }} Intermediate CA'
            --pki-country={{ openziti_pki_country }}
            --pki-organization={{ openziti_pki_organisation }}
            --pki-organizational-unit={{ openziti_pki_organisational_unit }}
        creates: "{{ openziti_pki_root }}/{{ openziti_intermediate_file }}/keys/{{ openziti_intermediate_file }}.key"

    - name: Create server and client keys
      ansible.builtin.command:
        cmd: |
          {{ openziti_bin }}/ziti pki create key
            --pki-root={{ openziti_pki_root }}
            --ca-name={{ openziti_intermediate_file }}
            --key-file={{ openziti_server_file }}
        creates: "{{ openziti_pki_root }}/{{ openziti_intermediate_file }}/keys/{{ openziti_server_file }}.key"
    
    - name: Create server certs 
      ansible.builtin.command:
        cmd: |
          {{ openziti_bin }}/ziti pki create server
            --pki-root={{ openziti_pki_root }}
            --ca-name={{ openziti_intermediate_file }}
            --key-file={{ openziti_server_file }}
            --server-file={{ openziti_server_file }}
            --dns='localhost,{{ openziti_ctrl_advertised_address }}'
            --ip='127.0.0.1,::1'
            --allow-overwrite
        creates: "{{ openziti_pki_root }}/{{ openziti_intermediate_file }}/certs/{{ openziti_server_file }}.chain.pem"

    - name: Create client certs
      ansible.builtin.command:
        cmd: |
          {{ openziti_bin }}/ziti pki create client
            --pki-root={{ openziti_pki_root }}
            --ca-name={{ openziti_intermediate_file }}
            --key-file={{ openziti_server_file }}
            --client-file={{ openziti_client_file }}
            --allow-overwrite
        creates: "{{ openziti_pki_root }}/{{ openziti_intermediate_file }}/certs/{{ openziti_client_file }}.cert"

- name: Create db directory
  ansible.builtin.file:
    path: "{{ openziti_home }}/db"
    state: directory
    owner: "{{ openziti_user }}"
    group: "{{ openziti_group }}"
    mode: ug=rwx,o-rwx

- name: Generate controller config
  ansible.builtin.template:
    src: controller.conf.j2
    dest: "{{ openziti_home }}/ctrl.conf.yaml"
    mode: ug=rw,o-rw
    owner: "{{ openziti_user }}"
    group: "{{ openziti_group }}"

- name: Initialze controller
  become: true
  become_user: "{{ openziti_user }}"
  ansible.builtin.command:
    cmd: |
      {{ openziti_bin }}/ziti controller edge init {{ openziti_home }}/ctrl.conf.yaml
        -u '{{ openziti_admin_username }}'
        -n '{{ openziti_admin_name }}'
        -p '{{ openziti_admin_password }}'
    creates: "{{ openziti_home }}/db/ctrl.db"

# - name: Start controller service
#   ansible.builtin.service:
#     name: ziti-controller
#     state: started
#     enabled: true
# 