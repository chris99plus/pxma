---

- name: Ensure ziti router home exist
  become: true
  ansible.builtin.file:
    path: "{{ openziti_router_home }}"
    state: directory
    mode: ug=rwx,o-rwx

- name: Ensure router installed
  become: true
  ansible.builtin.apt:
    name: openziti-router

- name: Get router service
  become: true
  ansible.builtin.service:
    name: ziti-router
    state: stopped

- name: Create router config
  become: true
  ansible.builtin.template:
    src: router.conf.j2
    dest: "{{ openziti_router_home }}/config.yml"
    mode: u=rw,go=r

- name: Get router key
  become: true
  ansible.builtin.stat:
    path: "{{ openziti_router_home }}/{{ openziti_router_name }}.key"
  register: _router_key_file

- name: Enroll router
  become: true
  when: not _router_key_file.stat.exists
  block:
 
    - name: Edge login
      ansible.builtin.command:
        cmd: |
          {{ openziti_bin }}/ziti edge login {{ openziti_edge_advertised_address }}:{{ openziti_edge_advertised_port }}
            --yes
            -u '{{ openziti_admin_username }}'
            -p '{{ openziti_admin_password }}'

    - name: Create router enrollment jwt tmp file
      ansible.builtin.tempfile:
        state: file
        suffix: .jwt
      register: _router_jwt_file

    # TODO: match router config to create settings
    - name: Edge create router
      ansible.builtin.command:
        cmd: |
          {{ openziti_bin }}/ziti edge create edge-router '{{ openziti_router_name }}'
            --jwt-output-file '{{ _router_jwt_file.path }}'
            {% if openziti_router_tunnel_enabled %}--tunneler-enabled{% endif %}

    - name: Edge logout
      ansible.builtin.command:
        cmd: "{{ openziti_bin }}/ziti edge logout"

    - name: Enroll router
      ansible.builtin.command:
        cmd: |
          {{ openziti_bin }}/ziti router enroll '{{ openziti_router_home }}/config.yml'
            --jwt '{{ _router_jwt_file.path }}'
        chdir: "{{ openziti_router_home }}"

- name: Ensure openziti router home is accessable from service
  become: true
  ansible.builtin.file:
    path: "{{ openziti_router_home }}"
    state: directory
    mode: u=rwx,go-rwx
    owner: 65534
    group: 65534
    recurse: true

- name: Start router service
  become: true
  ansible.builtin.systemd_service:
    name: ziti-router
    state: started
    daemon-reload: true
    enabled: true
